.TH S9S 1 "August 29, 2016"

.SH NAME
s9s-cluster \- Command line client for the Severalnines Clustercontrol server.
.SH SYNOPSIS
.B s9s-cluster
.RI [OPTION]...
.SH DESCRIPTION
\fBs9s\fP  is a command line tool for ClusterControl, which can be used to
deploy and operate MySQL, MariaDB, MongoDB and PostgreSQL.

.SH OPTIONS
.SS "Main Option"
The application should always be started using a main option that sets what
operation should be performed. This "main option" should be one of the
following:

.TP
.B \-L, \-\-list
List the clusters managed by the controller.

.TP
.B \-\-stat
Print the details of one or more clusters.

.TP
.B \-\-create
Create a new cluster. When this command line option is provided the program
will contact the controller and register a new job that will eventually create
a new cluster. 

.TP
.B \-\-add\-node
Adds a new node (server) to the cluster or to be more precise creates a new
job that will eventually add a new node to the cluster. The name (or IP 
address) of the node should be specified using the \fB\-\-nodes\fR command 
line option.

.TP
.B \-\-remove\-node 
Removes a node from the cluster (creates a new job that will remove the node
from the cluster). The name (or IP address) of the node should be specified 
using the \fB\-\-nodes\fR command line option.

.TP
.B \-\-rolling-restart
Restart all nodes of the cluster by keeping the cluster alive. This command 
line option will create a job that will restart all the nodes.

.TP
.B \-\-stop
Creates and registers and a new job that will stop the cluster when executed.

.TP
.B \-\-start
Creates a new job to start the cluster.

.TP
.B \-\-drop
Removes the cluster from the Cmon controller. The cluster remains operational,
but the controller will no longer manage or monitor it.

.TP
.B \-\-create-account
Create a new account to be used on the cluster to access the database(s).

.TP
.B \-\-delete-account
Delete an existing account from the cluster.


.SS Generic Options

.TP
.B \-\-help
Print the help message and exist.

.TP
.B \-v, \-\-verbose
Print more messages than normally.

.TP
.B \-V, \-\-version
Print version information and exit.

.TP
.BR \-c " [\fIPROT\fP://]\fIHOSTNAME\fP[:\fIPORT\fP]" "\fR,\fP \-\^\-controller=" [\fIPROT\fP://]\\fIHOSTNAME\fP[:\fIPORT\fP]
The host name of the Cmon Controller. The protocol and port is also accepted as
part of the hostname (e.g. --controller="https://127.0.0.1:9556").

.TP
.BI \-P " PORT" "\fR,\fP \-\^\-controller-port=" PORT
The port where the Cmon Controller is waiting for connections.

.TP
.BI \-t " STRING" "\fR,\fP \-\^\-rpc-token=" STRING
The RPC token to be used when authenticating on the Cmon Controller.

.TP
.B \-l, \-\-long
This option is similar to the -l option for the standard ls UNIX utility
program. If the program creates a list of objects this option will change its
format to show more details.

.TP
.B \-\-print-json
The JSON strings will be printed while communicating with the controller. This 
option is for debugging purposes.

.TP
.BR \-\^\-color [ =\fIWHEN\fP "]
Turn on and off the syntax highlighting of the output. The supported values for 
.I WHEN
is
.BR never ", " always ", or " auto .

.TP
.B \-\-batch
Print no messages. If the application created a job print only the job ID number
and exit. If the command prints data do not use syntax highlight, headers,
totals, only the pure table to be processed using filters.

.TP
.B \-\-no\-header
Do not print headers for tables.

.\"
.\"
.\"
.SS Job Related Options

.TP
.B \-\-wait
If the application created a job (e.g. to create a new cluster) and this command
line option is provided it will wait until the job is executed. While waiting a
progress bar will be shown unless the silent mode is set.

.TP
.B \-\-log
If the application created a job (e.g. to create a new cluster) and this command
line option is provided it will wait until the job is executed. While waiting
the job logs will be shown unless the silent mode is set.

.TP
.BI \-\^\-schedule= DATETIME
The job will not be executed now but it is scheduled to execute later. The
datetime string is sent to the backend, so all the formats are supported that is
supported by the controller.

.\"
.\"
.\"
.SS Cluster Related Options

.TP
.BI \-i " INTEGER" "\fR,\fP \-\^\-cluster-id=" INTEGER
If the operation related to an existing cluster this option can be used to
control which cluster will be manipulated. If the operation creates a new
cluster the cluster ID is assigned automatically, so this option can't be used.

.TP
.BI \-n " NAME" "\fR,\fP \-\^\-cluster-name=" NAME
Sets the cluster name. If the operation creates a new cluster this will be the
name of the new cluster. (Usage of this option for selecting an existing cluster
is not yet implemented.)

.TP
.BI \-\^\-nodes= NODELIST
The list of nodes or hosts enumerated in a special string using a semicolon as
field separator (e.g. "192.168.1.1;192.168.1.2"). 
The strings in the node list are urls that can have the following protocols:

.\" 
.\" Here is how we make a 7 character deep left indent from the .RS to the .RE
.\" formatters. This is by the way the list of the supported protocols.
.\" 
.RS 7
.TP
.B mysql:// 
The protocol for MySql servers. Use this string to specify MySql servers.
.TP
.B ndbd://
Someone has to write this part.
.TP
.B ndb_mgmd://
Someone has to write this part. The mgmd:// notation is also accepted.
.RE

.TP
.BI \-\^\-vendor= VENDOR
The name of the vendor to be installed.

.TP
.BI \-\^\-provider-version= VERSION
The version string of the software to be installed. 

.TP
.BI \-\^\-os-user= USERNAME
The name of the remote user that is used to gain SSH access on the remote nodes.
If this command line option is omitted the name of the local user will be used
on the remote hosts too.

.TP
.BI \-\^\-cluster-type= TYPENAME
The name of the cluster type to be installed. Currently the following types are
supported: galera, mysqlreplication, ndb (or ndbcluster).

.TP
.BI \-\^\-db\-admin= USERNAME
The user name of the database administrator (e.g. 'root').

.TP
.BI \-\^\-db-admin-passwd= PASSWORD
The password of the datanase administrator. Passing the password through the
command line is a security risk, so I will add other ways to store the password
soon.

.TP
.BI \-\^\-account= USERNAME[:PASSWORD][@HOSTNAME]
The account to be used or created on the cluster. The command line option
argument may contain a username, a password for the user and a hostname
identifying the host from where the user may log in.

.TP
.BI \-\^\-with-database
Create a database for the new account while creating a new user account on the 
cluster. The name of the database will be the same as the name of the account
and all access rights will be granted for the account to use the database.

.TP
.BI \-\^\-privileges= EXPRESSION
Privileges to be granted to a user account on the server. The privileges are
specified using a simple language that is interpreted by the Cmon Controller. 
The language is specified as follows:

.nf
.RS
  expression: specification[;...] 
  
  specification: [object[,...]:]privilege[,...]
  
  object: {
      *
    | *.*
    | database_name.*
    | database_name.table_name
    | database_name
  }
.RE
.fi

.RS
Please note that an object name on itself is a database name (and not a table
name) and multiple objects can be enumerated by using the ',' as separator. It
is also important that multiple specifications can be enumerated using the
semicolon as separator.

The expression \fB"MyDb:INSERT,UPDATE;Other:SELECT"\fP for example defines
\fBINSERT\fP and \fBUPDATE\fP privileges on the \fBMyDb\fP database and
\fBSELECT\fP privilege on the \fBOther\fP database. The expression
\fB"INSERT,UPDATE"\fP on the other hand would specify \fBINSERT\fP and
\fBUPDATE\fP privileges on all databases and all tables.


.\"
.\"
.\"
.SH ENVIRONMENT
The s9s application will read and consider the following environment variables:
.TP 5 
CMON_CONTROLLER
The host name and optionally the port number of the controller that will be
contacted. This also can be set using the \fB\-\-controller\fR command line
option.

.TP 5
CMON_CLUSTER_ID
The numerical ID of the cluster to control, same as the \fB\-\-cluster\-id\fR
command line option.

.\" 
.\" The examples. The are very helpful for people just started to use the
.\" application.
.\" 
.SH EXAMPLES
.PP
Here is an example showing how to create a new cluster:

.nf
# \fBs9s cluster --create --controller=localhost:9555 --cluster-type=galera --vendor=percona --nodes="192.168.1.104;192.168.1.107;192.168.1.108" --provider-version=5.6 --wait\fR
.fi

This command will create a new job on the controller to create a new cluster.
Since the --wait command line option was provided it will wait until the job is
finished, but the command line tool can be aborted before the job is finished,
the job remains there and will be executed by the controller anyway. It is also
possible to attach to the job using the job ID later or use the --log option to
print the messages of the job.

Another example simply lists the clusters managed by the controller:

.nf
# \fBs9s cluster --list --long --controller=localhost:9555 --color=always\fR
.fi

Schedule a rolling restart of the cluster 20 minutes from now:

.nf
# \fBs9s cluster --rolling-restart --cluster-id=1 --schedule="$(date -d 'now + 20 min')"\fR
.fi

Create a database account on the cluster and also create a new database to be
used by the new user. Grant all access on the new database for the new user:

.nf
# \fBs9s cluster --create-account --cluster-id=1 --account=john:passwd@10.10.1.100 --with-database\fR
.fi
